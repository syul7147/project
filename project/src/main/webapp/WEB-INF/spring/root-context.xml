<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.7.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 데이터베이스 설정 -->		
		<!--
			package ez.web;			
			class Member{
				private String name;
				private int age;
			} 
		
		    Member member = new Member() 
		    ==> xml로 표현했을 때 
		    <bean id="member" class="ez.web.Member">
		    
		    내부적으로는 아래와 같이 <리플렉션 기법>으로 객체 생성		    
		    Class memberClazz = Class.forName("ez.web.Member")
		    member = memberClazz.newInstance()
		-->
	
		<!-- db.properties 파일 연결-->
		<bean id="propertyPlaceholderConfigurer" 
			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<!-- property는 setter 메소드와 같다 -->
			<property name="locations" value="/WEB-INF/mybatis/db.properties"></property>
		</bean>
		
<!-- =========================================== -->	
		<!-- jdbc 설정(DataSource : 데이터베이스) -->
		<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
			<property name="driverClass" value="${driver}"/>
			<property name="url" value="${url}"/>
			<property name="username" value="${username}"/>
			<property name="password" value="${password}"/>
		</bean> -->
		
		<!-- MyBatis SqlSessionFactory 설정 -->
		<!-- <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="configLocation" value="/WEB-INF/mybatis/config.xml" />
			<property name="mapperLocations" value="classpath:kr/ezen/mybatis/*.xml" />
		</bean> -->
		
<!-- HikariCP 설정 : JDBC Connection Pool 라이브러리 -->		
		<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
			<property name="driverClassName" value="${driver}"/>
			<property name="jdbcUrl" value="${url}"/>
			<property name="username" value="${username}"/>
			<property name="password" value="${password}"/>
		</bean>
		<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
			<constructor-arg ref="hikariConfig"/>
		</bean>
		
	<!-- 이메일 인증 Bean 등록 -->	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com"/>
		<property name="port" value="587"/>
		<property name="username" value="ezofftin4@gmail.com"/>
		<property name="password" value="hljdqdeohktlwpxk"/>
		<property name="defaultEncoding" value="utf-8"/>
		
		<property name="javaMailProperties">
        	<props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
                <prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
            </props>
      	</property>
	</bean>


<!-- MyBatis SqlSessionFactory 설정 -->
		<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="configLocation" value="/WEB-INF/mybatis/config.xml" />
			<!--
			kr.ezen.mybatis 패키지 => kr.ezen.mapper 변경, 주석처리 해줌 
			<property name="mapperLocations" value="classpath:kr/ezen/mybatis/*.xml" /> 
			-->
		</bean>
		<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
		
		<context:component-scan base-package="kr.ezen.service" />
		<mybatis-spring:scan base-package="kr.ezen.project.mapper" />
</beans>
